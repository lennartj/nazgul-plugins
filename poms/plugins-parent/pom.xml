<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    ################################################
    # Section 1:  Project information
    ################################################
    -->
    <parent>
        <groupId>se.jguru.nazgul.tools.poms.external</groupId>
        <artifactId>nazgul-tools-external-parent</artifactId>
        <version>2.0.9</version>
        <relativePath/>
    </parent>

    <groupId>se.jguru.nazgul.plugins.poms.plugins-parent</groupId>
    <artifactId>nazgul-plugins-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <url>${url.prefix}/${path.in.reactor}</url>
    <description>The Nazgul Framework: Plugins contains Maven plugin implementations for simplified development.
    </description>

    <licenses>
        <license>
            <name>jGuru Europe Corporate Source License, based on The Apache Software License, Version 2.0</name>
            <url>http://www.jguru.se/licenses/jguruCorporateSourceLicense-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>lj</id>
            <name>Lennart JÃ¶relid</name>
            <email>lj@jguru.se</email>
            <roles>
                <role>Committer</role>
            </roles>
            <organization>jGuru Europe AB</organization>
            <organizationUrl>http://www.jguru.se</organizationUrl>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <properties>
        <path.in.reactor>poms/plugins-parent</path.in.reactor>

        <!--
            Keep this version constant in sync with the parent pom's.
        -->
        <nazgul.tools.version>2.0.9</nazgul.tools.version>
    </properties>

    <!--
    ################################################
    # Section 2:  Dependency (management) settings
    ################################################
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>se.jguru.nazgul.tools.validation.aspect</groupId>
                <artifactId>nazgul-tools-validation-aspect</artifactId>
                <version>${nazgul.tools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.5.10</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
    ################################################
    # Section 3:  Build settings
    ################################################
    -->
    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.build.directory}/jaxb2/transformed</directory>
                <includes>
                    <include>**/*.xsd</include>
                </includes>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.felix</groupId>
                                        <artifactId>maven-bundle-plugin</artifactId>
                                        <versionRange>[2.3.7,)</versionRange>
                                        <goals>
                                            <goal>manifest</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>license-maven-plugin</artifactId>
                                        <versionRange>[1.5,)</versionRange>
                                        <goals>
                                            <goal>
                                                update-file-header
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Enforce not importing incorrect projects. -->
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <id>enforce-imports</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration combine.self="override">
                            <fail>true</fail>
                            <fail>${breakOnFailure.enforcer}</fail>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.0.5,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${jdk.version}</version>
                                </requireJavaVersion>
                                <!--
                                    We cannot use require Upper Bound Deps since forge
                                    depends on some fairly old ones.
                                -->
                                <!-- requireUpperBoundDeps / -->

                                <!--
                                    Enforce the ProjectType structure, implying that all projects
                                    must comply with the project template definitions.
                                -->
                                <validateProjectTypes
                                        implementation="se.jguru.nazgul.tools.codestyle.enforcer.rules.ValidateProjectType"/>

                                <!--
                                    Enforce the implementation rules for dependencies, to enforce that
                                    the level of dependency tanglement is not increased. This implies that
                                    implementation projects cannot import other implementation projects (but
                                    instead should import APIs).

                                    While the configuration below reflect the default settings, it is
                                    reproduced her to serve as an example of how to configure this enforcement rule
                                    in child reactors - where needs are likely different than here.
                                -->
                                <restrictImplDependencies
                                        implementation="se.jguru.nazgul.tools.codestyle.enforcer.rules.RestrictImplDependencies">
                                    <includedGroupIdPatterns>${enforcer.includedGroupIdPatterns}
                                    </includedGroupIdPatterns>
                                    <excludedGroupIdPatterns>${enforcer.excludedGroupIdPatterns}
                                    </excludedGroupIdPatterns>
                                </restrictImplDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Use the dependency plugin to copy the OpenJPA runtime
                to the target directory.
            -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.openjpa</groupId>
                                    <artifactId>openjpa</artifactId>
                                    <version>${openjpa.version}</version>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <destFileName>openjpa.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Configure the Surefire plugin to run all JPA unit tests
                with the OpenJPA javaagent enabled
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkMode>pertest</forkMode>
                    <argLine>${surefire.argLine}</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>1.5</version>
                <!--$NO-MVN-MAN-VER$-->
                <configuration>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <outputDirectory>${project.build.directory}/jaxb2/transformed/generated-schema</outputDirectory>
                </configuration>
            </plugin>

            <!-- Ensure unit test coverage. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>clean</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--
    ################################################
    # Section 4:  External systems
    ################################################
    -->

    <!--
        Define repository settings for Maven's deploy and release plugins.
        Moved to settings.xml, as per recommendation within Maven specs.
    -->
    <distributionManagement>
        <site>
            <id>jGuru_NazgulForgeSite</id>
            <name>jGuru_NazgulForgeSite</name>
            <url>${distro.url.prefix}/${path.in.reactor}</url>
        </site>
    </distributionManagement>

    <!--
       Define connections for Maven's VCS integration.
    -->
    <scm>
        <connection>${scm.url.prefix}/${reactor.name}</connection>
        <developerConnection>${scm.url.prefix}/${reactor.name}</developerConnection>
        <url>${reactor.url.remote.prefix}/${reactor.name}</url>
        <tag>HEAD</tag>
    </scm>

    <!--
    ################################################
    # Section 5:  Profiles
    ################################################
    -->

    <profiles>
        <profile>
            <!--
                Profile permitting the reactor to be built and installed without
                any unit tests being executed. This is required since Forge's installer
                builds the Maven project without any unit tests.
            -->
            <id>install_plugin</id>
            <activation>
                <property>
                    <name>maven.test.skip</name>
                    <value>true</value>
                </property>
            </activation>

            <!-- Add definitions here to enable the build to run properly all tests switched off. -->
            <properties>
                <!-- Define code-breaking constants -->
                <breakOnFailure.checkstyle>false</breakOnFailure.checkstyle>
                <breakOnFailure.cobertura>false</breakOnFailure.cobertura>
                <breakOnFailure.pmd>false</breakOnFailure.pmd>
                <breakOnFailure.enforcer>false</breakOnFailure.enforcer>
                <breakOnFailure.license>false</breakOnFailure.license>
            </properties>
        </profile>
    </profiles>

</project>
